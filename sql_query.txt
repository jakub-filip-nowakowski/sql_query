SHOW databases;
USE najszybsze_zwierzeta;
SHOW tables;
DESC najwolniejsze_zwierzeta;
CREATE TABLE najszybsze
(
	zwierze CHAR(20) NOT NULL,
    max_predkosc INT,
    stan CHAR(10)
);
   
DESC najszybsze;

INSERT INTO unikaty_najszybsze(zwierze_id, zwierze, max_predkosc, stan) 
VALUES (1,'Sokol Wedrowny', 390, 'nurkowanie');

INSERT INTO unikaty_najszybsze(zwierze_id, zwierze, max_predkosc) 
VALUES (10, 'Orzel Zloty', 320);

INSERT INTO najszybsze(max_predkosc, stan) 
VALUES (170, 'lot');

SELECT * FROM najszybsze;

DROP TABLE najszybsze;

/* ========================================================================= */

CREATE TABLE najszybsze
(
	zwierze CHAR(20) NOT NULL DEFAULT 'nienazwane',
    max_predkosc INT,
    stan CHAR(10) NOT NULL DEFAULT 'niepodano'
);

DESC najszybsze;

SELECT * FROM najszybsze;

CREATE TABLE unikaty_najszybsze
(
	zwierze_id INT NOT NULL,
    zwierze CHAR(20) DEFAULT 'nienazwane',
    max_predkosc INT NOT NULL, 
    stan CHAR (10) DEFAULT 'nie podano',
PRIMARY KEY(zwierze_id)
);

DESC unikaty_najszybsze;
SELECT * FROM unikaty_najszybsze;

DROP TABLE unikaty_najszybsze;

CREATE TABLE unikaty_najszybsze
(
	zwierze_id INT AUTO_INCREMENT PRIMARY KEY,
    zwierze CHAR(20) DEFAULT 'nienazwane',
    max_predkosc INT NOT NULL, 
    stan CHAR (10) DEFAULT 'nie podano'
);

INSERT INTO unikaty_najszybsze(zwierze, max_predkosc, stan) 
VALUES ('Sokol Wedrowny', 390, 'nurkowanie');

INSERT INTO unikaty_najszybsze(zwierze, max_predkosc) 
VALUES ('Orzel Zloty', 320);

SELECT * FROM unikaty_najszybsze;

INSERT INTO unikaty_najszybsze(zwierze_id, zwierze, max_predkosc) 
VALUES (173, 'Kobuz', 160);

INSERT INTO unikaty_najszybsze(zwierze, max_predkosc) 
VALUES ('Gepard', 160);

/* ========================================================================= */

USE sakila;
DESC sakila;
SHOW TABLES;

SELECT * FROM film;
DESC film;

SELECT title, release_year FROM film;

SELECT title, length FROM film LIMIT 151;

SELECT length, title FROM film LIMIT 150, 20;

SELECT title, rating  FROM film WHERE rating = 'G';

SELECT title, length FROM film WHERE length > 120;

SELECT title, length FROM film WHERE length != 130;

SELECT title, rating FROM film LIMIT 50;

SELECT title FROM film LIMIT 980, 20;

SELECT 
	title AS 'Tytu³ filmu', 
	release_year AS 'Rok wydania',
	length AS 'D³ugoœæ filmu', 
	rental_duration AS 'Czas wypo¿yczenia', 
	rental_rate AS 'Koszt wypo¿yczenia', 
	replacement_cost AS 'Koszt odkupu' 
FROM film 
LIMIT 20;


SELECT database();

DESC customer;
SELECT 
	first_name AS 'Imiê',
    last_name AS 'Nazwisko',
    email AS 'Adres email',
    create_date AS 'Data rejestracji'
FROM customer 
LIMIT 99, 15;

USE sakila;
CREATE TABLE fastest
(
    animal CHAR(30),
    max_speed INT,
    class CHAR(20)
);
INSERT INTO fastest(animal, max_speed, class)
VALUES
    ("Peregrine falcon", 390, "Flight-diving"),
    ("Golden eagle", 320, "Flight-diving"),
    ("Whitethroated needletail swift", 170, "Flight");
    
SELECT * FROM fastest;

SELECT * FROM customer LIMIT 10;
UPDATE customer SET email = 'mary.smith@gmail.com' WHERE customer_id = 1;
UPDATE customer SET last_name = "KONONOWICZ" WHERE customer_id = 7;

SHOW databases;
SHOW tables;
USE sakila;

SELECT database();
USE najszybsze_zwierzeta;
CREATE TABLE fastest
(
    animal CHAR(30),
    max_speed INT,
    class CHAR(20)
);
INSERT INTO fastest(animal, max_speed, class)
VALUES
    ("Peregrine falcon", 390, "Flight-diving"),
    ("Golden eagle", 320, "Flight-diving"),
    ("Whitethroated needletail swift", 170, "Flight"),
    ('Eurasian hobby', 160, 'Flight'),
    ('Mexican free-tailed bat', 160, 'Flight'),
    ('Frigatebird', 153, 'Flight'),
    ('Rock dove', 149, 'Flight'),
    ('Spur-winged goose', 142, 'Flight'),
    ('Black marlin', 129, 'Swimming'),
    ('Gryfalcon', 128, 'Flight');

SELECT * FROM fastest;
DELETE FROM fastest WHERE animal = 'Rock dove';
DELETE FROM fastest WHERE class = 'Flight-diving';

USE sakila;
SELECT * FROM customer LIMIT 40;
UPDATE customer SET email = 'Lopez.A@yahoo.com' WHERE customer_id = 32;
DELETE FROM customer WHERE customer_id = 33;

/* ========================================================================= */

CREATE TABLE fastest_file
(
	zwierze CHAR(30),
    predkosc INT,
    klasa CHAR(20)
);

SHOW VARIABLES LIKE 'secure_file_priv';

LOAD DATA INFILE 'C:\\ProgramData\\MySQL\\MySQL Server 8.0\\Uploads\\fastest_file.csv'
INTO TABLE fastest_file
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\r\n';

SELECT * FROM fastest_file;

CREATE TABLE fastest_file2
(
	zwierze CHAR(30),
    predkosc DEC(4,1),
    klasa CHAR(20)
);

LOAD DATA INFILE 'C:\\ProgramData\\MySQL\\MySQL Server 8.0\\Uploads\\fastest_utf8.csv'
INTO TABLE fastest_file2
CHARACTER SET utf8
FIELDS TERMINATED BY ';'
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 LINES
(zwierze, @predkosc, @klasa)
SET predkosc = REPLACE (@predkosc, ',', '.'),
	klasa = IF(@klasa = '', NULL, @klasa);
    
SELECT * FROM fastest_file2;

/* ========================================================================= */

SHOW databases;
CREATE DATABASE ksiazki;
SELECT database();
CREATE TABLE ksiazki1 
(
	ksizka_id INT AUTO_INCREMENT PRIMARY KEY,
	author CHAR(50),
	title CHAR(150),
	publication_year INT,
	ISBN CHAR(13),
    rating DEC(3,2),
	ratings_no INT,
	reviews_no INT,
	1_star INT,
	2_star INT,
	3_star INT,
	4_star INT,
	5_star INT
);
USE ksiazki;
DROP TABLE ksiazki1;
SHOW TABLES;
DESC ksiazki1;

LOAD DATA INFILE 'C:\\ProgramData\\MySQL\\MySQL Server 8.0\\Uploads\\ksiazki.csv'
INTO TABLE ksiazki1
CHARACTER SET utf8
FIELDS TERMINATED BY ';'
LINES TERMINATED BY '\r\n'
IGNORE 1 LINES
(author, title, publication_year, ISBN, @rating, ratings_no, reviews_no, 1_star, 2_star, 3_star, 4_star, 5_star)
SET rating = REPLACE(@rating, ',', '.'); 
SELECT * FROM ksiazki1;
/* ========================================================================== */
SELECT author, title FROM ksiazki1
INTO OUTFILE 'pliktest.csv'
CHARACTER SET utf8
FIELDS TERMINATED BY ';'
ENCLOSED BY '"'
LINES TERMINATED BY '\r\n';
/* ========================================================================== */
SELECT title, publication_year FROM ksiazki1
INTO OUTFILE 'C:\\pliktest2.csv'
FIELDS TERMINATED BY ';'
LINES TERMINATED BY '\r\n';
/* ========================================================================== */
SELECT concat(author,title) FROM ksiazki1 LIMIT 5;
SELECT concat(author, '-', title, '-', publication_year) FROM ksiazki1 LIMIT 5;
SELECT 
	concat_ws(' - ', author, title, publication_year) AS 'author - tytu³ - rok wydania'
FROM ksiazki1 
LIMIT 5;
/* ========================================================================== */
SELECT substring('mam na imiê Jakub', 12,6);
SELECT substring('mam na imiê Jakub', 12);
SELECT substring('mam na imiê Jakub', -5);

SELECT substring(title, 1, 12) FROM ksiazki1;

SELECT concat
(
	substring(title, 1, 7),
	'...'
)
FROM ksiazki1;

SELECT concat
(
	substring(author, 1, 5),
    '...',
    ' - ',
    substring(title, 1, 10),
    '...'
) 
FROM ksiazki1;
/* ========================================================================== */
SELECT REPLACE('My SQL jest super!', 'super', 'ekstra');

SELECT 
substring(
	REPLACE(title, 'e', '3'),
    1, 10
)
FROM ksiazki1;

SELECT 	
REPLACE( 
	REPLACE(
		REPLACE(
			REPLACE(
				REPLACE(title,	'e', '3'),
								'a', '4'),
								't', '7'),
								'b', '8'),
								's', '5')
FROM ksiazki1 LIMIT 15;
/* ================================================================================= */
USE ksiazki;
SELECT REVERSE(author) FROM ksiazki1;

SELECT char_length('Jakub Nowakowski z Sosnowca');
SELECT title, CHAR_LENGTH(title) AS 'D³ugoœæ tytu³u' FROM ksiazki1;
SELECT UPPER('jakub nowakowski');
SELECT LOWER('JAKUB NOWAKOWSKI');

SELECT author FROM ksiazki1;
SELECT 
	SUBSTRING_INDEX(author, ' ', 1) AS first_name,
    SUBSTRING_INDEX(author, ' ', -1) AS last_name
FROM ksiazki1;

SELECT DISTINCT publication_year FROM ksiazki1;
/*==========================================================*/
SELECT 
DISTINCT LOWER(
		SUBSTRING_INDEX(author, ' ', 1)
	)
AS imiê,
CHAR_LENGTH(SUBSTRING_INDEX(author, ' ', 1)) AS 'D³ugoœæ imienia'
FROM ksiazki1;
/*=========================================================== */
SELECT 
	title AS tytu³,
    rating
FROM ksiazki1
ORDER BY rating DESC
LIMIT 10;

SELECT 
	author AS autor,
    title AS tytu³,
    publication_year AS 'rok wydania',
    isbn
FROM ksiazki1
ORDER BY 4 DESC
LIMIT 10;

DESC ksiazki1;

SELECT 
	title AS tytu³,
    SUBSTRING_INDEX(author, ' ', -1) AS nazwisko,
    ratings_no AS 'iloœæ ocen'
FROM ksiazki1
ORDER BY 3 DESC
LIMIT 15;
 
SELECT * FROM ksiazki1 WHERE author LIKE 'Jo%';
SELECT * FROM ksiazki1 WHERE author LIKE '%Tolkien';
SELECT * FROM ksiazki1 WHERE author LIKE '%Tolk%';

SELECT SUBSTRING_INDEX(author, ' ', 1) FROM ksiazki1 
WHERE SUBSTRING_INDEX(author, ' ', 1) 
LIKE '____';

SELECT * FROM ksiazki1 WHERE title LIKE '%/%%';

SELECT title FROM ksiazki1 WHERE title LIKE '%the%';

SELECT SUBSTRING_INDEX(author, ' ', -1) FROM ksiazki1 
WHERE CHAR_LENGTH(SUBSTRING_INDEX(author, ' ', -1)) = 6;

/*=========================================================== */
USE ksiazki;
SELECT COUNT(*) FROM ksiazki1;
SELECT COUNT(DISTINCT author) FROM ksiazki1;
SELECT COUNT(*) FROM ksiazki1 WHERE title LIKE '%the%';
SELECT 
	COUNT(DISTINCT SUBSTRING_INDEX(author, ' ', -1)) 
    FROM ksiazki1 
    WHERE CHAR_LENGTH(SUBSTRING_INDEX(author, ' ', -1)) = 6;

SELECT COUNT(*)
FROM ksiazki1
WHERE publication_year = 2012;

SELECT COUNT(*)
FROM ksiazki1
WHERE SUBSTRING_INDEX(author, ' ', 1) = 'John';

SELECT 
	author,
    COUNT(*) AS 'ile ksiazek'
FROM ksiazki1
GROUP BY author;

SELECT 
	publication_year,
    COUNT(*) AS 'ksiazki w danym roku'
FROM ksiazki1
GROUP BY publication_year
ORDER BY 2 DESC;





